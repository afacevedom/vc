<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Visual Computing</title><link>https://afacevedom.github.io/vc/docs/shortcodes/Workshop-Final-Shaders/</link><description>Recent content on Visual Computing</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://afacevedom.github.io/vc/docs/shortcodes/Workshop-Final-Shaders/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://afacevedom.github.io/vc/docs/shortcodes/Workshop-Final-Shaders/FotomosaicoHardware/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://afacevedom.github.io/vc/docs/shortcodes/Workshop-Final-Shaders/FotomosaicoHardware/</guid><description>Fotomosaico hardware # "</description></item><item><title/><link>https://afacevedom.github.io/vc/docs/shortcodes/Workshop-Final-Shaders/FotomosaicoSoftware/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://afacevedom.github.io/vc/docs/shortcodes/Workshop-Final-Shaders/FotomosaicoSoftware/</guid><description>Fotomosaico software # "</description></item><item><title/><link>https://afacevedom.github.io/vc/docs/shortcodes/Workshop-Final-Shaders/Webcrawler/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://afacevedom.github.io/vc/docs/shortcodes/Workshop-Final-Shaders/Webcrawler/</guid><description>Fotomosaico software # Bio # Estudiante de ingeniera de Sistemas. &amp;lt;script&amp;gt; let url = &amp;quot;https://www.googleapis.com/customsearch/v1?&amp;quot;; // register: https://developers.google.com/custom-search/json-api/v1/overview let apikey = &amp;quot;AIzaSyAGPjCqQzzIbJLjVYAHIiKwCHFr5woQ5K8&amp;quot;; //get the searchengine ID: https://cse.google.com/all (make sure image is on) let engineID = &amp;quot;35e9d86ebb01dfc12&amp;quot;; //check other parameters: https://tinyurl.com/googleapiCSE let searchType = &amp;quot;image&amp;quot;; let imgSize =&amp;quot;medium&amp;quot;; let request; //full API let getImg; let loc; let img_x, img_y; let frameBorder = 25; //each side let imgLoaded = false;</description></item></channel></rss>